<?xml version="1.0"?>
<!-- build file for JavaChecker project -->
<project name="JavaCheckerExternalChecks" default="check-all" basedir=".">


 <!-- set here location of ant (see ant.apache.org ) -->
 <property file="check-external.properties" />

 <!-- targets -->

 <target name="declareJavaChecker"  >
    <taskdef name="JavaChecker"  classname="ua.gradsoft.javachecker.ant.JavaCheckerTask">
     <classpath>
      <pathelement location="jsrc"/>
      <fileset dir="lib" includes="*.jar" />
      <pathelement location="${java.class.path}/"/>      
     </classpath>
    </taskdef>    
 </target>


 <target name="check-jetty" depends="declareJavaChecker" >
   <JavaChecker jchhome="${basedir}" output="jchreport-jetty.txt" outputFormat="text" prefs="etc/prefs1.xml" debug="false" q="false" showFiles="false" >
    <input dir="${jetty.home}/modules/jetty/src/main/java" />
    <input dir="${jetty.home}/modules/util/src/main/java" />
    <classpath>
			<fileset dir="${jetty.home}/lib">
				<include name="*.jar" />
			</fileset>
    </classpath>
    <disable check="NamePatterns" />
    <!--<disable check="UnclosedCloseable" />-->
   </JavaChecker>
 </target>

 <target name="check-guice" depends="declareJavaChecker" >
   <JavaChecker jchhome="${basedir}" output="jchreport-guice.txt" outputFormat="text" prefs="etc/prefs1.xml" debug="false" q="false" showFiles="false" >
    <input  dir="${guice.home}/src" />
    <classpath>
			<fileset dir="${guice.home}/lib">
				<include name="*.jar" />
				<include name="**/*.jar" />
			</fileset>
    </classpath>
    <disable check="NamePatterns" />
    <!--<disable check="UnclosedCloseable" />-->
   </JavaChecker>
 </target>

 <target name="check-jdk" depends="declareJavaChecker" >
   <JavaChecker jchhome="${basedir}" output="jchreport-jdk.txt" outputFormat="text" prefs="etc/prefs1.xml" debug="true" q="false" showFiles="true" fork="true" >
    <jvmarg value="-Xmx512M" />
    <input  dir="${jdk.home}/src" />
    <disable check="NamePatterns" />
    <!--<disable check="UnclosedCloseable" />-->
    <!--<disable check="SwitchLabelWithoutBreak" />-->
   </JavaChecker>
 </target>

 <target name="check-all" depends="check-jetty,check-guice" />

 <target name="check-coin-jetty" depends="declareJavaChecker" >
   <JavaChecker jchhome="${basedir}" output="coin-jetty.txt" 
                outputFormat="text" showFiles="true" 
                explicitEnabledOnly="true"
                fork="true"
                >
   <!--
    <jvmarg   value="-javaagent:${jrat.jar}" />
   -->
   <!--
    <jvmarg   value="-agentlib:hprof=cpu=samples" />
   -->
  <!--
    <jvmarg   value="-Dcom.sun.management.jmxremote" />
    <jvmarg   value="-Dcom.sun.management.jmxremote.port=9001" />
    <jvmarg   value="-Dcom.sun.management.jmxremote.ssl=false" />
    <jvmarg   value="-Dcom.sun.management.jmxremote.authenticate=false" />
  -->
    <input dir="${jetty.home}/modules/jetty/src/main/java" />
    <input dir="${jetty.home}/modules/util/src/main/java" />
    <classpath>
			<fileset dir="${jetty.home}/lib">
				<include name="*.jar" />
			</fileset>
    </classpath>
    <enable check="StringInSwitch" />
    <enable check="MultiCatch" />
    <enable check="MultiCatch_percents" />
    <enable check="CollectionGetOrSet" />
    <enable check="DiamondInitializers" />
    <enable check="DiamondInitializers_percents" />
    <enable check="CollectionLiterals" />
    <enable check="NewIntegerLiterals" />
    <enable check="NewIntegerLiterals_percents" />
    <enable check="Elvis" />
    <enable check="Elvis_percents" />
   </JavaChecker>
 </target>

 <target name="check-coin-misc-jetty" depends="declareJavaChecker" >
   <JavaChecker jchhome="${basedir}" output="coin-misc-jetty.txt" 
                outputFormat="text" showFiles="false" 
                explicitEnabledOnly="true"
                fork="true"
                >
   <!--
    <jvmarg   value="-javaagent:${jrat.jar}" />
   -->
    <input dir="${jetty.home}/modules/jetty/src/main/java" />
    <input dir="${jetty.home}/modules/util/src/main/java" />
    <classpath>
			<fileset dir="${jetty.home}/lib">
				<include name="*.jar" />
			</fileset>
    </classpath>
    <enable check="CompoundAssigments" />
   <!--
    <enable check="AllTraditionalFors" />
    <enable check="ForAroundSizeOrLength" />
    <enable check="ForAroundSizeConvertable" />
    <enable check="ForAroundLengthConvertable" />
   -->
   </JavaChecker>
 </target>

 <target name="check-coin-openjdk" depends="declareJavaChecker" >
   <JavaChecker jchhome="${basedir}" output="coin-jdk.txt" 
                outputFormat="text" showFiles="true" 
                explicitEnabledOnly="true"
                >
    <input dir="${openjdk.home}/jdk/src/share/classes" />
    <input dir="${openjdk.home}/jaxp/src/share/classes" />
   <!--
    <classpath>
    </classpath>
   -->
    <enable check="StringInSwitch" />
    <enable check="MultiCatch" />
    <enable check="MultiCatch_percents" />
    <enable check="Elvis" />
    <enable check="Elvis_percents" />
    <enable check="CollectionGetOrSet" />
    <enable check="CollectionLiterals" />
    <enable check="DiamondInitializers" />
    <enable check="DiamondInitializers_percents" />
    <enable check="NewIntegerLiterals" />
    <enable check="NewIntegerLiterals_percents" />
   </JavaChecker>
 </target>

 <target name="check-coin-gwt-user" depends="declareJavaChecker" >
   <JavaChecker jchhome="${basedir}" output="coin-gwt-user.txt" 
                outputFormat="text" showFiles="true" 
                explicitEnabledOnly="true"
                >
    <input dir="${gwt.home}/user/src" />
    <input dir="${gwt.home}/user/super/com/google/gwt/emul" />
    <include dir="${gwt.home}/dev/core/src" />
    <config name="resolver.recheckJavaLangByClass" value="true" />
    <enable check="StringInSwitch" />
    <enable check="MultiCatch" />
    <enable check="MultiCatch_percents" />
    <enable check="Elvis" />
    <enable check="Elvis_percents" />
    <enable check="CollectionGetOrSet" />
    <enable check="CollectionLiterals" />
    <enable check="DiamondInitializer" />
    <enable check="DiamondInitializers_percents" />
    <enable check="NewIntegerLiterals" />
    <enable check="NewIntegerLiterals_percents" />
   </JavaChecker>
 </target>

 <target name="check-coin-misc-gwt-user" depends="declareJavaChecker" >
   <JavaChecker jchhome="${basedir}" output="coin-misc-gwt-user.txt" 
                outputFormat="text" showFiles="true" 
                explicitEnabledOnly="true"
                >
    <input dir="${gwt.home}/user/src" />
    <input dir="${gwt.home}/user/super/com/google/gwt/emul" />
    <include dir="${gwt.home}/dev/core/src" />
    <config name="resolver.recheckJavaLangByClass" value="true" />
    <enable check="CompoundAssigments" />
   </JavaChecker>
 </target>


 <target name="check-coin-hibernate" depends="declareJavaChecker" >
   <echo message="check.hibernate, antlr.jar=${antlr.jar}" />
   <JavaChecker jchhome="${basedir}" output="coin-hibernate.txt" 
                outputFormat="text" showFiles="true" 
                explicitEnabledOnly="true"
                >
    <input dir="${hibernate.home}/core/src/main/java" />
    <input dir="${hibernate.home}/annotations/src/main/java" />
    <input dir="${hibernate.home}/entitymanager/src/main/java" />
    <input dir="${hibernate.home}/commons-annotations/src/main/java" />
    <classpath>
     <pathelement location="${antlr.jar}" />
     <pathelement location="${j2ee.jar}" />
     <pathelement location="${slf4j-api.jar}" />
     <pathelement location="${slf4j-impl.jar}" />
    </classpath>
    <enable check="StringInSwitch" />
    <enable check="MultiCatch" />
    <enable check="MultiCatch_percents" />
    <enable check="Elvis" />
    <enable check="Elvis_percents" />
    <enable check="CollectionGetOrSet" />
    <enable check="CollectionLiterals" />
    <enable check="DiamondInitializers" />
    <enable check="DiamondInitializers_percents" />
    <enable check="NewIntegerLiterals" />
    <enable check="NewIntegerLiterals_percents" />
   </JavaChecker>
 </target>

 <target name="check-coin-misc-hibernate" depends="declareJavaChecker" >
   <echo message="check.hibernate, antlr.jar=${antlr.jar}" />
   <JavaChecker jchhome="${basedir}" output="coin-misc-hibernate.txt" 
                outputFormat="text" showFiles="true" 
                explicitEnabledOnly="true"
                >
    <input dir="${hibernate.home}/core/src/main/java" />
    <input dir="${hibernate.home}/annotations/src/main/java" />
    <input dir="${hibernate.home}/entitymanager/src/main/java" />
    <input dir="${hibernate.home}/commons-annotations/src/main/java" />
    <classpath>
     <pathelement location="${antlr.jar}" />
     <pathelement location="${j2ee.jar}" />
     <pathelement location="${slf4j-api.jar}" />
     <pathelement location="${slf4j-impl.jar}" />
    </classpath>
    <enable check="CompoundAssigments" />
   </JavaChecker>
 </target>

 <target name="check-coin-compiere" depends="declareJavaChecker" >
   <JavaChecker jchhome="${basedir}" output="coin-compiere.txt"
                outputFormat="text" showFiles="true"
                explicitEnabledOnly="true"
                >
    <input dir="${compiere.home}/common/src" />
    <input dir="${compiere.home}/serverRoot/src/main/ejb" />
    <input dir="${compiere.home}/serverRoot/src/main/server" />
    <input dir="${compiere.home}/serverRoot/src/main/servlet" />
    <input dir="${compiere.home}/ad/src/" />
    <input dir="${compiere.home}/base/src/" />
    <input dir="${compiere.home}/interfaces/src/" />
    <input dir="${compiere.home}/tools/Src/" />
    <classpath>
     <fileset dir="${compiere.home}/lib" includes="**/*.jar" />
     <fileset dir="${compiere.home}/jboss" includes="**/*.jar" />
     <fileset dir="${compiere.home}/tools/lib" includes="**/*.jar" />
    </classpath>
    <enable check="StringInSwitch" />
    <enable check="MultiCatch" />
    <enable check="MultiCatch_percents" />
    <enable check="Elvis" />
    <enable check="Elvis_percents" />
    <enable check="CollectionGetOrSet" />
    <enable check="CollectionLiterals" />
    <enable check="DiamondInitializers" />
    <enable check="DiamondInitializers_percents" />
    <enable check="NewIntegerLiterals" />
    <enable check="NewIntegerLiterals_percents" />
   </JavaChecker>
 </target>


</project>
